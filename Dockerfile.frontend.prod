# Stage 1: Build the React app
FROM node:20-alpine AS build
WORKDIR /app

COPY package*.json ./
RUN npm install
COPY . .
RUN npm run build

# Stage 2: Serve the built assets with NGINX
FROM nginx:alpine

# Copy built frontend and custom NGINX config
COPY --from=build /app/build /usr/share/nginx/html
COPY nginx/default.conf.template /etc/nginx/conf.d/default.conf.template
COPY nginx/nginx.conf /etc/nginx/nginx.conf

# Create the final config file as root (during build)
RUN envsubst '$DOMAIN $NGINX_BACKEND_UPSTREAM' < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf

# Ensure cache directories exist and have proper ownership
RUN mkdir -p /var/cache/nginx /tmp && \
    chown -R nginx:nginx /usr/share/nginx /var/cache/nginx /etc/nginx /tmp

# Create necessary directories for nginx to run as non-root
RUN mkdir -p /var/cache/nginx/client_temp \
    /var/cache/nginx/proxy_temp \
    /var/cache/nginx/fastcgi_temp \
    /var/cache/nginx/uwsgi_temp \
    /var/cache/nginx/scgi_temp \
    /var/run \
    /var/log/nginx && \
    chown -R nginx:nginx /var/cache/nginx /var/run /var/log/nginx

# Drop to non-root user
USER nginx

EXPOSE 80

# Start nginx with proper configuration for non-root user
CMD ["nginx", "-g", "daemon off;"]