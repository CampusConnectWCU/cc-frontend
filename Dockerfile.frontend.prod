# Stage 1: Build the React app
FROM node:20-alpine AS build
WORKDIR /app

COPY package*.json ./
RUN npm install
COPY . .
RUN npm run build

# Stage 2: Serve the built assets with NGINX
FROM nginx:alpine

# Copy built frontend and custom NGINX config
COPY --from=build /app/build /usr/share/nginx/html
COPY nginx/default.conf.template /etc/nginx/conf.d/default.conf
COPY nginx/nginx.conf /etc/nginx/nginx.conf

# Create all necessary directories and set permissions
RUN mkdir -p /var/cache/nginx/client_temp \
    /var/cache/nginx/proxy_temp \
    /var/cache/nginx/fastcgi_temp \
    /var/cache/nginx/uwsgi_temp \
    /var/cache/nginx/scgi_temp \
    /var/run \
    /var/log/nginx \
    /tmp

# Keep running as root for nginx (will be overridden by Kubernetes security context)

EXPOSE 80

# Start nginx with proper configuration for non-root user
CMD ["nginx", "-g", "daemon off;"]